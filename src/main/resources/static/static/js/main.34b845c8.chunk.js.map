{"version":3,"sources":["functions/apiFunctions.ts","UI.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initializeSpecialistsSource","setSpecialists","specialistsSource","EventSource","onerror","readyState","setTimeout","onmessage","message","console","log","data","JSON","parse","UI","useState","undefined","customers","setCustomers","specialists","useEffect","customersSource","initializeCustomersSource","length","map","i","index","customerId","u","specialistId","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAgBO,SAASA,EACdC,GAEA,IAAMC,EAAoB,IAAIC,YAC5B,yCAEFD,EAAkBE,QAAU,WACW,IAAjCF,EAAkBG,YACpBC,WAAWN,EAA6B,MAG5CE,EAAkBK,UAAY,SAACC,GAC7BC,QAAQC,IAAIF,GAEZ,IAAMG,EAAOC,KAAKC,MAAML,EAAQG,MAChCV,EAAeU,I,WCfZ,SAASG,EAAT,GAAwB,qBACKC,wBAAiCC,GADvC,mBACrBC,EADqB,KACVC,EADU,OAGUH,wBACpCC,GAJ0B,mBAGrBG,EAHqB,KAGRlB,EAHQ,KAsB5B,OARAQ,QAAQC,IAAIO,GACZR,QAAQC,IAAIS,GAEZC,qBAAU,YDEL,SACLF,GAEA,IAAMG,EAAkB,IAAIlB,YAC1B,uCAEFkB,EAAgBjB,QAAU,WACW,IAA/BiB,EAAgBhB,YAClBC,WAAWN,EAA6B,MAG5CqB,EAAgBd,UAAY,SAACC,GAC3BC,QAAQC,IAAIF,GAEZ,IAAMG,EAAOC,KAAKC,MAAML,EAAQG,MAChCO,EAAaP,IChBbW,CAA0BJ,GAC1BlB,EAA4BC,KAC3B,IAGD,gCACIgB,EAGA,qCACE,qDACCA,EAAUM,QACTN,EAAUO,KAAI,SAACC,EAAQC,GAAT,OACZ,4BAAgBD,EAAEE,YAAVD,SANd,oBAWF,8BACIP,EAGA,qCACE,yDACCA,GAAeA,EAAYI,OACxBJ,EAAYK,KAAI,SAACI,EAAGF,GAAJ,OACd,4BAAgBE,EAAEC,cAAVH,MAEVP,EAAYI,UARlB,2BCzCKO,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACjB,EAAD,OCMSkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.34b845c8.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { Customer, Specialist } from \"../UI\";\r\n\r\nexport function getSpecialistsHi(setData: (data: any) => void) {\r\n  return axios\r\n    .get(`http://localhost:8080/api/specialists/hi`, {\r\n      headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n    })\r\n    .then((res) => {\r\n      setData(res.data);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport function initializeSpecialistsSource(\r\n  setSpecialists: (specialists: Specialist[]) => void\r\n) {\r\n  const specialistsSource = new EventSource(\r\n    \"http://127.0.0.1:8080/api/specialists\"\r\n  );\r\n  specialistsSource.onerror = () => {\r\n    if (specialistsSource.readyState === 2) {\r\n      setTimeout(initializeSpecialistsSource, 300);\r\n    }\r\n  };\r\n  specialistsSource.onmessage = (message) => {\r\n    console.log(message);\r\n\r\n    const data = JSON.parse(message.data);\r\n    setSpecialists(data);\r\n  };\r\n}\r\n\r\nexport function initializeCustomersSource(\r\n  setCustomers: (customers: Customer[]) => void\r\n) {\r\n  const customersSource = new EventSource(\r\n    \"http://127.0.0.1:8080/api/customers\"\r\n  );\r\n  customersSource.onerror = () => {\r\n    if (customersSource.readyState === 2) {\r\n      setTimeout(initializeSpecialistsSource, 300);\r\n    }\r\n  };\r\n  customersSource.onmessage = (message) => {\r\n    console.log(message);\r\n\r\n    const data = JSON.parse(message.data);\r\n    setCustomers(data);\r\n  };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport {\n  initializeSpecialistsSource,\n  initializeCustomersSource,\n} from \"./functions/apiFunctions\";\n\ninterface Props {}\n\nexport interface Customer {\n  customerId: number;\n}\n\nexport interface Specialist {\n  specialistId: number;\n}\n\nexport function UI({}: Props) {\n  const [customers, setCustomers] = useState<Customer[] | undefined>(undefined);\n\n  const [specialists, setSpecialists] = useState<Specialist[] | undefined>(\n    undefined\n  );\n\n  function updateCustomers(customers: Customer[]): void {\n    setCustomers(customers);\n  }\n\n  function updateSpecialists(specialists: Specialist[]): void {\n    setSpecialists(specialists);\n  }\n  console.log(customers);\n  console.log(specialists);\n\n  useEffect(() => {\n    initializeCustomersSource(setCustomers);\n    initializeSpecialistsSource(setSpecialists);\n  }, []);\n\n  return (\n    <div>\n      {!customers ? (\n        \"loading customers\"\n      ) : (\n        <>\n          <div>waiting customers:</div>\n          {customers.length &&\n            customers.map((i: any, index: number) => (\n              <p key={index}>{i.customerId}</p>\n            ))}\n        </>\n      )}\n\n      <div>\n        {!specialists ? (\n          \"loading specialists\"\n        ) : (\n          <>\n            <div>available specialists:</div>\n            {specialists && specialists.length\n              ? specialists.map((u, index) => (\n                  <p key={index}>{u.specialistId}</p>\n                ))\n              : specialists.length}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { UI } from \"./UI\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UI />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}