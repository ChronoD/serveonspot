{"version":3,"sources":["components/AppointmentInformation.tsx","components/SpecialistsList.tsx","containers/CustomerPanel.tsx","components/AppointmentsList.tsx","components/LogOutButton.tsx","containers/StaffPanel.tsx","containers/MainPanel.tsx","App.tsx","reportWebVitals.ts","index.tsx","functions/apiFunctions.ts"],"names":["AppointmentInformation","appointment","removeAppointment","useState","undefined","appointmentInfo","setAppointmentInfo","appointmentId","specialist","useEffect","source","initializeTrackedAppointmentSource","close","specialistInfo","message","onClick","unregisterAppointment","SpecialistsList","setAppointment","specialists","setSpecialists","updateSpecialists","initializeSpecialistsSource","length","itemLayout","size","dataSource","renderItem","spec","Item","title","specialistId","style","border","specialistType","registerAppointment","CustomerPanel","AppointmentsList","appointments","setAppointments","updateAppointments","console","log","initializeAppointmentsSource","map","a","LogOutButton","sessionStorage","removeItem","layout","labelCol","span","wrapperCol","tailLayout","offset","StaffPanel","setSpecialist","name","initialValues","remember","onFinish","values","authenticateStaffMember","onFinishFailed","errorInfo","label","rules","required","Password","type","htmlType","MainPanel","authorizedMode","setAuthorizedMode","App","className","FallbackComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","axios","post","headers","res","data","catch","error","patch","status","loginDetais","get","authorization","createBasicAuthToken","appointmentsSource","EventSource","onerror","readyState","setTimeout","onmessage","JSON","parse","setCustomers","specialistsSource","loginDetails","unencodedDetails","username","password","Buffer","from","toString"],"mappings":"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","file":"static/js/main.2e8ef31b.chunk.js","sourcesContent":["import { Button } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  initializeTrackedAppointmentSource,\r\n  unregisterAppointment,\r\n} from \"../functions/apiFunctions\";\r\nimport { Appointment, AppointmentInfo } from \"../state/dataTypes\";\r\n\r\ninterface Props {\r\n  appointment: Appointment;\r\n  removeAppointment: () => void;\r\n}\r\n\r\nexport function AppointmentInformation({\r\n  appointment,\r\n  removeAppointment,\r\n}: Props) {\r\n  const [appointmentInfo, setAppointmentInfo] = useState<\r\n    AppointmentInfo | undefined\r\n  >(undefined);\r\n\r\n  const { appointmentId, specialist } = appointment;\r\n\r\n  useEffect(() => {\r\n    const source = initializeTrackedAppointmentSource(\r\n      appointmentId,\r\n      setAppointmentInfo\r\n    );\r\n    return () => source.close();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <div>Vizitas:</div>\r\n        {`Nr. ${appointmentId} pas ${specialist.specialistInfo}`}\r\n      </>\r\n      <div>\r\n        {appointmentInfo && (\r\n          <>\r\n            <p>vizito informacija:</p>\r\n            {appointmentInfo?.message}\r\n            <Button\r\n              onClick={() =>\r\n                unregisterAppointment(appointmentId, removeAppointment)\r\n              }\r\n            >\r\n              atšaukti\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, List, Card } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  initializeSpecialistsSource,\r\n  registerAppointment,\r\n} from \"../functions/apiFunctions\";\r\nimport { Appointment, Specialist } from \"../state/dataTypes\";\r\n\r\ninterface Props {\r\n  setAppointment: (appointment: Appointment) => void;\r\n}\r\n\r\nexport function SpecialistsList({ setAppointment }: Props) {\r\n  const [specialists, setSpecialists] = useState<Specialist[] | undefined>(\r\n    undefined\r\n  );\r\n\r\n  function updateSpecialists(specialists: Specialist[]): void {\r\n    setSpecialists(specialists);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const source = initializeSpecialistsSource(updateSpecialists);\r\n    return () => source.close();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!specialists ? (\r\n        \"Laukiama duomenų\"\r\n      ) : (\r\n        <>\r\n          {specialists && specialists.length && (\r\n            <>\r\n              <div>Dirbantys specialistai:</div>\r\n              <List\r\n                itemLayout=\"vertical\"\r\n                size=\"large\"\r\n                dataSource={specialists}\r\n                renderItem={(spec) => (\r\n                  <List.Item>\r\n                    <Card\r\n                      title={spec.specialistId}\r\n                      style={{ border: \"5px solid green\" }}\r\n                    >\r\n                      <>{spec.specialistType}</>\r\n                      <Button\r\n                        onClick={() =>\r\n                          registerAppointment(spec.specialistId, setAppointment)\r\n                        }\r\n                      >\r\n                        Registruotis {spec.specialistId}\r\n                      </Button>\r\n                    </Card>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      {specialists && specialists.length === 0\r\n        ? \"Šiuo metu nėra dirbančių specialistų\"\r\n        : null}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Appointment } from \"../state/dataTypes\";\r\nimport { AppointmentInformation } from \"../components/AppointmentInformation\";\r\nimport { SpecialistsList } from \"../components/SpecialistsList\";\r\n\r\ninterface Props {}\r\n\r\nexport function CustomerPanel({}: Props) {\r\n  const [appointment, setAppointment] = useState<Appointment | undefined>(\r\n    undefined\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {!appointment && <SpecialistsList setAppointment={setAppointment} />}\r\n      {appointment && (\r\n        <AppointmentInformation\r\n          appointment={appointment}\r\n          removeAppointment={() => setAppointment(undefined)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Button } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  initializeAppointmentsSource,\r\n  unregisterAppointment,\r\n} from \"../functions/apiFunctions\";\r\nimport { Appointment } from \"../state/dataTypes\";\r\n\r\ninterface Props {}\r\n\r\nexport function AppointmentsList({}: Props) {\r\n  const [appointments, setAppointments] = useState<Appointment[] | undefined>(\r\n    undefined\r\n  );\r\n\r\n  function updateAppointments(appointments: Appointment[]): void {\r\n    return setAppointments(appointments);\r\n  }\r\n\r\n  console.log(appointments);\r\n\r\n  useEffect(() => {\r\n    const source = initializeAppointmentsSource(updateAppointments);\r\n    return () => source.close();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!appointments ? (\r\n        \"loading appointments\"\r\n      ) : (\r\n        <>\r\n          <div>Ongoing appointments:</div>\r\n          {appointments.length &&\r\n            appointments.map((a: Appointment) => (\r\n              <div key={a.appointmentId}>\r\n                <p key={a.appointmentId}>{a.appointmentId}</p>\r\n              </div>\r\n            ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Button } from \"antd\";\r\ninterface Props {}\r\n\r\nexport function LogOutButton({}: Props) {\r\n  function logOut(): void {\r\n    sessionStorage.removeItem(\"Username\");\r\n    // sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n  }\r\n\r\n  return <Button onClick={logOut}>logOut</Button>;\r\n}\r\n","import { Button, Form, Input, Checkbox } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { AppointmentsList } from \"../components/AppointmentsList\";\r\nimport { LogOutButton } from \"../components/LogOutButton\";\r\nimport { SpecialistsList } from \"../components/SpecialistsList\";\r\nimport { authenticateStaffMember } from \"../functions/apiFunctions\";\r\nimport { Specialist } from \"../state/dataTypes\";\r\n\r\ninterface Props {}\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nexport interface LoginDetails {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport function StaffPanel({}: Props) {\r\n  const [specialist, setSpecialist] = useState<Specialist | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const onFinish = (values: LoginDetails) => {\r\n    authenticateStaffMember(values, setSpecialist);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <LogOutButton />\r\n      <div>\r\n        {!specialist && (\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Prisijungti\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        )}\r\n      </div>\r\n      {specialist && <AppointmentsList />}\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Form, Input, Checkbox } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { CustomerPanel } from \"./CustomerPanel\";\r\nimport { StaffPanel } from \"./StaffPanel\";\r\n\r\ninterface Props {}\r\n\r\nexport function MainPanel({}: Props) {\r\n  const [authorizedMode, setAuthorizedMode] = useState<boolean>(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setAuthorizedMode(!authorizedMode);\r\n        }}\r\n      >\r\n        {!authorizedMode ? \"Darbuotojams\" : \"Grįžti\"}\r\n      </Button>\r\n      {authorizedMode && <StaffPanel />}\r\n      {!authorizedMode && <CustomerPanel />}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport { MainPanel } from \"./containers/MainPanel\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./state/store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ErrorBoundary FallbackComponent={() => <p>whoops</p>}>\r\n        {/* <Provider store={store}> */}\r\n        <MainPanel />\r\n        {/* </Provider> */}\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from \"axios\";\r\nimport { LoginDetails } from \"../containers/StaffPanel\";\r\nimport { Appointment, AppointmentInfo, Specialist } from \"../state/dataTypes\";\r\n\r\nexport function registerAppointment(\r\n  specialistId: number,\r\n  setAppointment: (appointment: Appointment) => void\r\n) {\r\n  return axios\r\n    .post(\r\n      `http://localhost:8080/appointments`,\r\n      { specialistId: specialistId },\r\n      {\r\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      }\r\n    )\r\n    .then((res) => {\r\n      console.log(res);\r\n      const data = res.data;\r\n      console.log(data);\r\n      setAppointment(data);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport function unregisterAppointment(\r\n  appointmentId: number,\r\n  removeAppointment: () => void\r\n) {\r\n  return axios\r\n    .patch(\r\n      `http://localhost:8080/appointments/${appointmentId}`,\r\n      { status: \"unregister\" },\r\n      {\r\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      }\r\n    )\r\n    .then((res) => {\r\n      const data = res.data;\r\n      removeAppointment();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport function authenticateStaffMember(\r\n  loginDetais: LoginDetails,\r\n  setSpecialist: (s: Specialist) => void\r\n) {\r\n  return axios\r\n    .get(`http://localhost:8080/authorities`, {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        authorization: createBasicAuthToken(loginDetais),\r\n      },\r\n    })\r\n    .then((res) => {\r\n      const data = res.data;\r\n      console.log(data);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport function initializeTrackedAppointmentSource(\r\n  appointmentId: number,\r\n  setAppointmentInfo: (appointmentInfo: AppointmentInfo) => void\r\n): EventSource {\r\n  const appointmentsSource = new EventSource(\r\n    `http://127.0.0.1:8080/appointments/${appointmentId}`\r\n  );\r\n\r\n  appointmentsSource.onerror = () => {\r\n    if (appointmentsSource.readyState === 2) {\r\n      setTimeout(initializeSpecialistsSource, 300);\r\n    }\r\n  };\r\n  appointmentsSource.onmessage = (message) => {\r\n    console.log(message);\r\n\r\n    const data = JSON.parse(message.data);\r\n    setAppointmentInfo(data);\r\n  };\r\n  return appointmentsSource;\r\n}\r\n\r\nexport function initializeAppointmentsSource(\r\n  setCustomers: (appointments: Appointment[]) => void\r\n): EventSource {\r\n  const appointmentsSource = new EventSource(\r\n    \"http://127.0.0.1:8080/appointments\"\r\n  );\r\n  appointmentsSource.onerror = () => {\r\n    if (appointmentsSource.readyState === 2) {\r\n      setTimeout(initializeSpecialistsSource, 300);\r\n    }\r\n  };\r\n  appointmentsSource.onmessage = (message) => {\r\n    // console.log(message);\r\n\r\n    const data = JSON.parse(message.data);\r\n    setCustomers(data);\r\n  };\r\n  return appointmentsSource;\r\n}\r\n\r\nexport function initializeSpecialistsSource(\r\n  setSpecialists: (specialists: Specialist[]) => void\r\n): EventSource {\r\n  const specialistsSource = new EventSource(\r\n    \"http://127.0.0.1:8080/specialists\"\r\n  );\r\n  specialistsSource.onerror = () => {\r\n    if (specialistsSource.readyState === 2) {\r\n      setTimeout(initializeSpecialistsSource, 300);\r\n    }\r\n  };\r\n  specialistsSource.onmessage = (message) => {\r\n    // console.log(message);\r\n    const data = JSON.parse(message.data);\r\n    setSpecialists(data);\r\n  };\r\n  return specialistsSource;\r\n}\r\n\r\nfunction createBasicAuthToken(loginDetails: LoginDetails) {\r\n  const { username, password } = loginDetails;\r\n  const unencodedDetails = username + \":\" + password;\r\n  return \"Basic \" + Buffer.from(unencodedDetails).toString(\"base64\");\r\n}\r\n"],"sourceRoot":""}