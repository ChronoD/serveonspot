{"version":3,"sources":["functions/apiFunctions.ts","components/Appointments.tsx","components/Specialists.tsx","components/UI.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initializeSpecialistsSource","setSpecialists","specialistsSource","EventSource","onerror","readyState","setTimeout","onmessage","message","console","log","data","JSON","parse","Appointments","useState","undefined","appointments","setAppointments","updateAppointments","useEffect","setCustomers","appointmentsSource","initializeAppointmentsSource","length","map","a","appointmentId","onClick","axios","patch","status","headers","then","res","catch","error","Specialists","specialists","updateSpecialists","s","specialistId","post","UI","App","className","FallbackComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAoDO,SAASA,EACdC,GAEA,IAAMC,EAAoB,IAAIC,YAC5B,qCAEFD,EAAkBE,QAAU,WACW,IAAjCF,EAAkBG,YACpBC,WAAWN,EAA6B,MAG5CE,EAAkBK,UAAY,SAACC,GAC7BC,QAAQC,IAAIF,GAEZ,IAAMG,EAAOC,KAAKC,MAAML,EAAQG,MAChCV,EAAeU,I,WCzDZ,SAASG,EAAT,GAAkC,qBACCC,wBACtCC,GAFoC,mBAC/BC,EAD+B,KACjBC,EADiB,KAKtC,SAASC,EAAmBF,GAC1B,OAAOC,EAAgBD,GASzB,OANAR,QAAQC,IAAIO,GAEZG,qBAAU,YDYL,SACLC,GAEA,IAAMC,EAAqB,IAAInB,YAC7B,sCAEFmB,EAAmBlB,QAAU,WACW,IAAlCkB,EAAmBjB,YACrBC,WAAWN,EAA6B,MAG5CsB,EAAmBf,UAAY,SAACC,GAC9BC,QAAQC,IAAIF,GAEZ,IAAMG,EAAOC,KAAKC,MAAML,EAAQG,MAChCU,EAAaV,IC1BbY,CAA6BJ,KAC5B,IAGD,8BACIF,EAGA,qCACE,wDACCA,EAAaO,QACZP,EAAaQ,KAAI,SAACC,GAAD,OACf,8BACE,8BACGA,EAAEC,cACH,cAAC,IAAD,CAEEC,QAAS,kBDrBSD,ECqBmBD,EAAEC,cDpBlDE,IACJC,MADI,6CAEmCH,GACtC,CAAEI,OAAQ,cACV,CACEC,QAAS,CAAE,8BAA+B,OAG7CC,MAAK,SAACC,OACNC,OAAM,SAACC,GACN3B,QAAQC,IAAI0B,MAXX,IAA+BT,GCmBpB,uBACOD,EAAEC,iBAHHD,EAAEC,gBADFD,EAAEC,qBANlB,yBChBD,SAASU,EAAT,GAAiC,qBACAtB,wBACpCC,GAFmC,mBAC9BsB,EAD8B,KACjBrC,EADiB,KAKrC,SAASsC,EAAkBD,GACzBrC,EAAeqC,GAWjB,OANAlB,qBAAU,WACRpB,EAA4BuC,KAC3B,IAKD,8BACID,EAGA,qCACE,yDACCA,GAAeA,EAAYd,OACxBc,EAAYb,KAAI,SAACe,GAAD,OACd,eAAC,IAAD,CAEEZ,QAAS,kBFrCSa,EEqCiBD,EAAEC,aFpC9CZ,IACJa,KADI,gBAGH,CAAED,aAAcA,GAChB,CACET,QAAS,CAAE,8BAA+B,OAG7CC,MAAK,SAACC,OACNC,OAAM,SAACC,GACN3B,QAAQC,IAAI0B,MAXX,IAA6BK,GEmCpB,2BAIiBD,EAAEC,eAHZD,EAAEC,iBAMXH,EAAYd,UAblB,wBC3BD,SAASmB,EAAT,GACL,OAD6B,eAE3B,gCACE,cAAC7B,EAAD,IADF,oBAGE,cAACuB,EAAD,O,YCQSO,MAZf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,gBAAD,CAAeC,kBAAmB,kBAAM,wCAAxC,SAEE,cAACH,EAAD,SCGOI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f92cf92e.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { Appointment, Specialist } from \"../state/dataTypes\";\r\n\r\nexport function registerAppointment(specialistId: number) {\r\n  return axios\r\n    .post(\r\n      `/appointments`,\r\n      { specialistId: specialistId },\r\n      {\r\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      }\r\n    )\r\n    .then((res) => {})\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport function unregisterAppointment(appointmentId: number) {\r\n  return axios\r\n    .patch(\r\n      `http://localhost:8080/appointments/${appointmentId}`,\r\n      { status: \"unregister\" },\r\n      {\r\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      }\r\n    )\r\n    .then((res) => {})\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport function initializeAppointmentsSource(\r\n  setCustomers: (appointments: Appointment[]) => void\r\n) {\r\n  const appointmentsSource = new EventSource(\r\n    \"http://127.0.0.1:8080/appointments\"\r\n  );\r\n  appointmentsSource.onerror = () => {\r\n    if (appointmentsSource.readyState === 2) {\r\n      setTimeout(initializeSpecialistsSource, 300);\r\n    }\r\n  };\r\n  appointmentsSource.onmessage = (message) => {\r\n    console.log(message);\r\n\r\n    const data = JSON.parse(message.data);\r\n    setCustomers(data);\r\n  };\r\n}\r\n\r\nexport function initializeSpecialistsSource(\r\n  setSpecialists: (specialists: Specialist[]) => void\r\n) {\r\n  const specialistsSource = new EventSource(\r\n    \"http://127.0.0.1:8080/specialists\"\r\n  );\r\n  specialistsSource.onerror = () => {\r\n    if (specialistsSource.readyState === 2) {\r\n      setTimeout(initializeSpecialistsSource, 300);\r\n    }\r\n  };\r\n  specialistsSource.onmessage = (message) => {\r\n    console.log(message);\r\n\r\n    const data = JSON.parse(message.data);\r\n    setSpecialists(data);\r\n  };\r\n}\r\n","import { Button } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  initializeAppointmentsSource,\r\n  unregisterAppointment,\r\n} from \"../functions/apiFunctions\";\r\nimport { Appointment } from \"../state/dataTypes\";\r\n\r\ninterface Props {}\r\n\r\nexport function Appointments({}: Props) {\r\n  const [appointments, setAppointments] = useState<Appointment[] | undefined>(\r\n    undefined\r\n  );\r\n\r\n  function updateAppointments(appointments: Appointment[]): void {\r\n    return setAppointments(appointments);\r\n  }\r\n\r\n  console.log(appointments);\r\n\r\n  useEffect(() => {\r\n    initializeAppointmentsSource(updateAppointments);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!appointments ? (\r\n        \"loading appointments\"\r\n      ) : (\r\n        <>\r\n          <div>Ongoing appointments:</div>\r\n          {appointments.length &&\r\n            appointments.map((a: Appointment) => (\r\n              <div key={a.appointmentId}>\r\n                <p key={a.appointmentId}>\r\n                  {a.appointmentId}\r\n                  <Button\r\n                    key={a.appointmentId}\r\n                    onClick={() => unregisterAppointment(a.appointmentId)}\r\n                  >\r\n                    unregister\r\n                  </Button>\r\n                </p>\r\n              </div>\r\n            ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Button } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  initializeSpecialistsSource,\r\n  initializeAppointmentsSource,\r\n  registerAppointment,\r\n  unregisterAppointment,\r\n} from \"../functions/apiFunctions\";\r\nimport { Specialist } from \"../state/dataTypes\";\r\n\r\ninterface Props {}\r\n\r\nexport function Specialists({}: Props) {\r\n  const [specialists, setSpecialists] = useState<Specialist[] | undefined>(\r\n    undefined\r\n  );\r\n\r\n  function updateSpecialists(specialists: Specialist[]): void {\r\n    setSpecialists(specialists);\r\n  }\r\n  // console.log(appointments);\r\n  // console.log(specialists);\r\n\r\n  useEffect(() => {\r\n    initializeSpecialistsSource(updateSpecialists);\r\n  }, []);\r\n\r\n  // console.log(appointments);\r\n\r\n  return (\r\n    <div>\r\n      {!specialists ? (\r\n        \"loading specialists\"\r\n      ) : (\r\n        <>\r\n          <div>Available specialists:</div>\r\n          {specialists && specialists.length\r\n            ? specialists.map((s) => (\r\n                <Button\r\n                  key={s.specialistId}\r\n                  onClick={() => registerAppointment(s.specialistId)}\r\n                >\r\n                  register with {s.specialistId}\r\n                </Button>\r\n              ))\r\n            : specialists.length}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Appointments } from \"./Appointments\";\r\nimport { Specialists } from \"./Specialists\";\r\n\r\ninterface Props {}\r\n\r\nexport function UI({}: Props) {\r\n  return (\r\n    <div>\r\n      <Appointments />\r\n      -----------------\r\n      <Specialists />\r\n      {/* <AppointmentInfo /> */}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport { UI } from \"./components/UI\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./state/store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ErrorBoundary FallbackComponent={() => <p>whoops</p>}>\r\n        {/* <Provider store={store}> */}\r\n        <UI />\r\n        {/* </Provider> */}\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}